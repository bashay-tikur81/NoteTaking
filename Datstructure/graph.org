#+TITLE: Graph data structure
#+AUTHOR: Ertale81
#+option:toc

* Representing Graph
You can choose two standard ways to represent a graph G = (V,E): as a collection of /adjacency lists/ or as /adjacency matrix/. Either way applies to both directed and undirected graph.
Because the adjacency-list representation provides a compact way to represent *sparse* graphs, those for which |E| is much less that |V|^2, it's usually a method of choice.
You might prefer /adjacency-matrix/ representation when the graph is *dense* - |E| is close to |v|^2 - or when you need to be able to tell quickly whether there is an edge connecting two given vertices.

The /adjacency-list/ representation of a graph G = (V,E) consists of an array Adj of |V| lists,
one for each vertex in V. For each u element of V, the adjacency list Adj[u] contains all the vertices v such that there is an edge (u,v) element of E.
